@{
    ViewData["Title"] = "Home Page";
}

<div class="container mt-4">
    <!-- Authentication UI -->
    <div id="loginSection">
        <h2>Login</h2>
        <form id="loginForm">
            <div class="mb-3">
                <label for="loginEmail" class="form-label">Email</label>
                <input type="email" class="form-control" id="loginEmail" required />
            </div>
            <div class="mb-3">
                <label for="loginPassword" class="form-label">Password</label>
                <input type="password" class="form-control" id="loginPassword" required />
            </div>
            <button type="submit" class="btn btn-primary">Login</button>
        </form>
        <hr />
        <h2>Register</h2>
        <form id="registerForm">
            <div class="mb-3">
                <label for="registerName" class="form-label">Name</label>
                <input type="text" class="form-control" id="registerName" required />
            </div>
            <div class="mb-3">
                <label for="registerEmail" class="form-label">Email</label>
                <input type="email" class="form-control" id="registerEmail" required />
            </div>
            <div class="mb-3">
                <label for="registerPassword" class="form-label">Password</label>
                <input type="password" class="form-control" id="registerPassword" required />
            </div>
            <div class="mb-3">
                <label for="confirmPassword" class="form-label">Confirm Password</label>
                <input type="password" class="form-control" id="confirmPassword" required />
            </div>
            <button type="submit" class="btn btn-success">Register</button>
        </form>
    </div>
    
    <!-- Logged in UI -->
    <div id="loggedInSection" style="display: none;">
        <div class="alert alert-success">
            <span id="userInfo"></span>
            <button class="btn btn-sm btn-outline-danger float-end" onclick="logout()">Logout</button>
        </div>
    </div>
    
    <hr />
    <h2>Product CRUD</h2>
    <button class="btn btn-info mb-2" id="loadProductsBtn">Load Products</button>
    <table class="table table-bordered" id="productsTable">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Category</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <h3>Add / Edit Product</h3>
    <form id="productForm">
        <input type="hidden" id="productId" />
        <div class="mb-3">
            <label for="orchidName" class="form-label">Name</label>
            <input type="text" class="form-control" id="orchidName" required />
        </div>
        <div class="mb-3">
            <label for="orchidDescription" class="form-label">Description</label>
            <input type="text" class="form-control" id="orchidDescription" required />
        </div>
        <div class="mb-3">
            <label for="orchidUrl" class="form-label">Image URL</label>
            <input type="text" class="form-control" id="orchidUrl" required />
        </div>
        <div class="mb-3">
            <label for="price" class="form-label">Price</label>
            <input type="number" class="form-control" id="price" required />
        </div>
        <div class="mb-3">
            <label for="categoryId" class="form-label">Category ID</label>
            <input type="number" class="form-control" id="categoryId" required />
        </div>
        <div class="mb-3">
            <label for="isNatural" class="form-label">Is Natural</label>
            <select class="form-control" id="isNatural">
                <option value="true">True</option>
                <option value="false">False</option>
            </select>
        </div>
        <button type="submit" class="btn btn-primary">Save Product</button>
    </form>
</div>
@section Scripts {
<script>
// Register form submission
$('#registerForm').submit(function(e) {
    e.preventDefault();
    const name = $('#registerName').val();
    const email = $('#registerEmail').val();
    const password = $('#registerPassword').val();
    const confirmPassword = $('#confirmPassword').val();
    
    if (password !== confirmPassword) {
        alert('Passwords do not match!');
        return;
    }
    
    registerAjax(email, password, name);
});

// Load Products
$('#loadProductsBtn').click(function() {
    fetch('/api/product/GetAll')
        .then(res => res.json())
        .then(data => {
            try {
                // If the response is a string, parse it
                const products = typeof data === 'string' ? JSON.parse(data) : data;
                renderProducts(products);
            } catch (e) {
                console.error('Error parsing products:', e);
                alert('Error loading products');
            }
        })
        .catch(err => {
            console.error('Error fetching products:', err);
            alert('Error loading products');
        });
});

function renderProducts(products) {
    const tbody = $('#productsTable tbody');
    tbody.empty();
    products.forEach(p => {
        tbody.append(`<tr>
            <td>${p.orchidId}</td>
            <td>${p.orchidName}</td>
            <td>${p.description}</td>
            <td>${p.price}</td>
            <td>${p.categoryId}</td>
            <td>
                <button class='btn btn-warning btn-sm' onclick='editProduct(${JSON.stringify(p).replace(/"/g, "'")})'>Edit</button>
                <button class='btn btn-danger btn-sm' onclick='deleteProduct(${p.orchidId})'>Delete</button>
            </td>
        </tr>`);
    });
}

// Add/Edit Product
$('#productForm').submit(function(e) {
    e.preventDefault();
    const id = $('#productId').val();
    const product = {
        orchidName: $('#orchidName').val(),
        description: $('#orchidDescription').val(),
        image: $('#orchidUrl').val(),
        price: parseFloat($('#price').val()),
        categoryId: parseInt($('#categoryId').val()),
        status: $('#isNatural').val() === 'true' ? 'Natural' : 'Artificial'
    };
    
    // If editing, add the ID to the product object
    if (id) {
        product.orchidId = parseInt(id);
    }
    
    const method = id ? 'PUT' : 'POST';
    const url = id ? `/api/product/${id}` : '/api/product';
    
    // Get token from localStorage
    const token = localStorage.getItem('jwtToken');
    const headers = {
        'Content-Type': 'application/json'
    };
    
    // Add authorization header if token exists
    if (token) {
        headers['Authorization'] = `Bearer ${token}`;
    }
    
    fetch(url, {
        method: method,
        headers: headers,
        body: JSON.stringify(product)
    })
    .then(res => {
        if (!res.ok) {
            throw new Error(`HTTP error! Status: ${res.status}`);
        }
        return res.json();
    })
    .then(() => {
        $('#productForm')[0].reset();
        $('#productId').val('');
        $('#loadProductsBtn').click();
        alert('Product saved successfully!');
    })
    .catch(err => {
        console.error('Error saving product:', err);
        alert('Error saving product: ' + err.message);
    });
});

window.editProduct = function(p) {
    $('#productId').val(p.orchidId);
    $('#orchidName').val(p.orchidName);
    $('#orchidDescription').val(p.description);
    $('#orchidUrl').val(p.image);
    $('#price').val(p.price);
    $('#categoryId').val(p.categoryId);
    $('#isNatural').val(p.status === 'Natural' ? 'true' : 'false');
}

window.deleteProduct = function(id) {
    if (!confirm('Are you sure you want to delete this product?')) {
        return;
    }
    
    // Get token from localStorage
    const token = localStorage.getItem('jwtToken');
    const headers = {};
    
    // Add authorization header if token exists
    if (token) {
        headers['Authorization'] = `Bearer ${token}`;
    }
    
    fetch(`/api/product/${id}`, { 
        method: 'DELETE',
        headers: headers
    })
    .then(res => {
        if (!res.ok) {
            throw new Error(`HTTP error! Status: ${res.status}`);
        }
        return res.json();
    })
    .then(() => {
        $('#loadProductsBtn').click();
        alert('Product deleted successfully!');
    })
    .catch(err => {
        console.error('Error deleting product:', err);
        alert('Error deleting product: ' + err.message);
    });
}

// Check authentication on page load
$(document).ready(function() {
    // This is handled by the site.js file
});
</script>
}
