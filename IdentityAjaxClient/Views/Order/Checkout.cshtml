@{
    ViewData["Title"] = "Checkout";
}

<div class="container">
    <h1>Checkout</h1>
    
    <div id="authStatus" class="alert alert-warning">
        Please log in to place an order.
    </div>

    <div class="row mt-4">
        <div class="col-md-8">
            <div id="cartItems" style="display: none;">
                <h3>Your Cart</h3>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Subtotal</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="cartTableBody">
                            <!-- Cart items will be loaded here -->
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="3" class="text-end"><strong>Total:</strong></td>
                                <td id="cartTotal">$0.00</td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <div class="alert alert-info" id="emptyCartMessage" style="display: none;">
                    Your cart is empty. <a href="/Product">Browse products</a> to add items to your cart.
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div id="checkoutForm" class="card" style="display: none;">
                <div class="card-header">
                    <h3 class="card-title">Order Summary</h3>
                </div>
                <div class="card-body">
                    <p><strong>Total Items:</strong> <span id="summaryItemCount">0</span></p>
                    <p><strong>Total Amount:</strong> $<span id="summaryTotal">0.00</span></p>
                    <hr>
                    <button id="placeOrderBtn" class="btn btn-success w-100">Place Order</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Order Confirmation Modal -->
    <div class="modal fade" id="orderConfirmationModal" tabindex="-1" aria-labelledby="orderConfirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="orderConfirmationModalLabel">Order Placed Successfully</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Your order has been placed successfully!</p>
                    <p><strong>Order ID:</strong> <span id="confirmationOrderId"></span></p>
                    <p><strong>Total Amount:</strong> $<span id="confirmationTotal"></span></p>
                </div>
                <div class="modal-footer">
                    <a href="/Order/MyOrders" class="btn btn-primary">View My Orders</a>
                    <a href="/Product" class="btn btn-secondary">Continue Shopping</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Cart data structure
        let cart = [];
        
        $(document).ready(function() {
            // Initialize cart from localStorage
            loadCart();
            updateAuthStatus();
            updateCartDisplay();
        });

        function updateAuthStatus() {
            const token = localStorage.getItem('jwtToken');
            const userEmail = localStorage.getItem('userEmail');
            
            if (token && userEmail) {
                // User is logged in
                $('#authStatus').removeClass('alert-warning').addClass('alert-success')
                    .html(`Logged in as <strong>${userEmail}</strong>`);
                $('#cartItems, #checkoutForm').show();
            } else {
                // User is logged out
                $('#authStatus').removeClass('alert-success').addClass('alert-warning')
                    .html('Please log in to place an order.');
                $('#cartItems, #checkoutForm').hide();
            }
        }

        function loadCart() {
            const savedCart = localStorage.getItem('cart');
            if (savedCart) {
                try {
                    cart = JSON.parse(savedCart);
                } catch (e) {
                    console.error('Error parsing cart from localStorage', e);
                    cart = [];
                }
            }
        }

        function saveCart() {
            localStorage.setItem('cart', JSON.stringify(cart));
        }

        function updateCartDisplay() {
            const tableBody = $('#cartTableBody');
            tableBody.empty();
            
            if (cart.length === 0) {
                $('#emptyCartMessage').show();
                $('#checkoutForm').hide();
                $('#cartTotal').text('$0.00');
                $('#summaryItemCount').text('0');
                $('#summaryTotal').text('0.00');
                return;
            }
            
            $('#emptyCartMessage').hide();
            $('#checkoutForm').show();
            
            let totalAmount = 0;
            let totalItems = 0;
            
            cart.forEach((item, index) => {
                const subtotal = item.price * item.quantity;
                totalAmount += subtotal;
                totalItems += item.quantity;
                
                const row = `
                    <tr>
                        <td>${item.name}</td>
                        <td>$${item.price.toFixed(2)}</td>
                        <td>
                            <div class="input-group input-group-sm">
                                <button class="btn btn-outline-secondary" onclick="updateQuantity(${index}, ${item.quantity - 1})">-</button>
                                <input type="text" class="form-control text-center" value="${item.quantity}" readonly>
                                <button class="btn btn-outline-secondary" onclick="updateQuantity(${index}, ${item.quantity + 1})">+</button>
                            </div>
                        </td>
                        <td>$${subtotal.toFixed(2)}</td>
                        <td>
                            <button class="btn btn-sm btn-danger" onclick="removeFromCart(${index})">Remove</button>
                        </td>
                    </tr>
                `;
                tableBody.append(row);
            });
            
            $('#cartTotal').text(`$${totalAmount.toFixed(2)}`);
            $('#summaryItemCount').text(totalItems);
            $('#summaryTotal').text(totalAmount.toFixed(2));
        }

        function updateQuantity(index, newQuantity) {
            if (newQuantity <= 0) {
                removeFromCart(index);
                return;
            }
            
            cart[index].quantity = newQuantity;
            saveCart();
            updateCartDisplay();
        }

        function removeFromCart(index) {
            cart.splice(index, 1);
            saveCart();
            updateCartDisplay();
        }

        // Place order
        $('#placeOrderBtn').click(function() {
            const token = localStorage.getItem('jwtToken');
            if (!token) {
                updateAuthStatus();
                return;
            }
            
            if (cart.length === 0) {
                alert('Your cart is empty');
                return;
            }
            
            // Prepare order data
            const orderDetails = cart.map(item => ({
                orchidId: item.id,
                quantity: item.quantity
            }));
            
            const orderData = {
                orderDetails: orderDetails
            };
            
            // Send order to API
            $.ajax({
                url: '/api/order/Create',
                type: 'POST',
                headers: {
                    'Authorization': 'Bearer ' + token,
                    'Content-Type': 'application/json'
                },
                data: JSON.stringify(orderData),
                success: function(order) {
                    // Clear cart
                    cart = [];
                    saveCart();
                    
                    // Show confirmation modal
                    $('#confirmationOrderId').text(order.id);
                    $('#confirmationTotal').text(order.totalAmount.toFixed(2));
                    $('#orderConfirmationModal').modal('show');
                    
                    // Update cart display
                    updateCartDisplay();
                },
                error: function(xhr) {
                    let errorMessage = 'Failed to place order';
                    if (xhr.responseJSON && xhr.responseJSON.error) {
                        errorMessage = xhr.responseJSON.error;
                    }
                    alert(errorMessage);
                }
            });
        });
    </script>
}